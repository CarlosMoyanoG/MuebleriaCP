package Vistas;
import Main.BD;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;


/**
 *
 * @author Carlos Moyano
 */

public class Clientes extends javax.swing.JFrame {
    

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        cargarClientes();
        tablaClientes.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {  // evita dobles eventos
                llenarCamposDesdeTabla();
            }
        });
        tablaClientes.setDefaultEditor(Object.class, null);

        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
        });
    }
    
    private void llenarCamposDesdeTabla() 
    {
        int fila = tablaClientes.getSelectedRow();
        if (fila < 0) return;

        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();

        txtCedulaCli.setText(modelo.getValueAt(fila, 1).toString());
        txtNombreCli.setText(modelo.getValueAt(fila, 2).toString());
        txtApellidoCli.setText(modelo.getValueAt(fila, 3).toString());
        txtDireccionCli.setText(modelo.getValueAt(fila, 4).toString());
        txtTelefonoCli.setText(modelo.getValueAt(fila, 5).toString());
        txtCorreoCli.setText(modelo.getValueAt(fila, 6).toString());
        cmbEstadoCli.setSelectedItem(modelo.getValueAt(fila, 7).toString());
    }
    
    public void cargarClientes()
    {
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        modelo.setRowCount(0);
        String sql = "SELECT cli_id, cli_cedula, cli_nombre, cli_apellido, cli_direccion, cli_telefono, cli_correo, cli_estado "
                   + "FROM MUE_CLIENTES "
                   + "ORDER BY cli_id";
        
        try (Connection cn = BD.conectar();
             PreparedStatement ps = cn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getInt("cli_id"),
                    rs.getString("cli_cedula"),
                    rs.getString("cli_nombre"),
                    rs.getString("cli_apellido"),
                    rs.getString("cli_direccion"),
                    rs.getString("cli_telefono"),
                    rs.getString("cli_correo"),
                    rs.getString("cli_estado")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        lblMateriales = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        lblApellidoCli = new javax.swing.JLabel();
        txtNombreCli = new javax.swing.JTextField();
        btnAgregarCli = new javax.swing.JButton();
        lblCrearProd5 = new javax.swing.JLabel();
        lblNombreCat3 = new javax.swing.JLabel();
        txtApellidoCli = new javax.swing.JTextField();
        lblApellidoCli1 = new javax.swing.JLabel();
        txtCedulaCli = new javax.swing.JTextField();
        lblApellidoCli2 = new javax.swing.JLabel();
        txtDireccionCli = new javax.swing.JTextField();
        lblApellidoCli3 = new javax.swing.JLabel();
        txtCorreoCli = new javax.swing.JTextField();
        lblApellidoCli4 = new javax.swing.JLabel();
        txtTelefonoCli = new javax.swing.JTextField();
        lblApellidoCli5 = new javax.swing.JLabel();
        btnEliminarCli = new javax.swing.JButton();
        btnActualizarCli = new javax.swing.JButton();
        cmbEstadoCli = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        lblListadoCat2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        exitBtn = new javax.swing.JPanel();
        exitTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMateriales.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        lblMateriales.setText("Clientes");
        jPanel7.add(lblMateriales, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 720, 20));

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblApellidoCli.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli.setText("Estado");
        jPanel8.add(lblApellidoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        txtNombreCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtNombreCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 230, -1));

        btnAgregarCli.setBackground(new java.awt.Color(255, 153, 0));
        btnAgregarCli.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnAgregarCli.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarCli.setText("AGREGAR");
        btnAgregarCli.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCliActionPerformed(evt);
            }
        });
        jPanel8.add(btnAgregarCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 100, 30));

        lblCrearProd5.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblCrearProd5.setText("Agregar Cliente:");
        jPanel8.add(lblCrearProd5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 200, -1));

        lblNombreCat3.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblNombreCat3.setText("Nombre:");
        jPanel8.add(lblNombreCat3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        txtApellidoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtApellidoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 230, -1));

        lblApellidoCli1.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli1.setText("Apellido:");
        jPanel8.add(lblApellidoCli1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        txtCedulaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtCedulaCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 230, -1));

        lblApellidoCli2.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli2.setText("Cédula:");
        jPanel8.add(lblApellidoCli2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        txtDireccionCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtDireccionCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 230, -1));

        lblApellidoCli3.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli3.setText("Dirección:");
        jPanel8.add(lblApellidoCli3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        txtCorreoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtCorreoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 230, -1));

        lblApellidoCli4.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli4.setText("Correo:");
        jPanel8.add(lblApellidoCli4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, -1, -1));

        txtTelefonoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoCliActionPerformed(evt);
            }
        });
        jPanel8.add(txtTelefonoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 230, -1));

        lblApellidoCli5.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidoCli5.setText("Teléfono:");
        jPanel8.add(lblApellidoCli5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        btnEliminarCli.setBackground(new java.awt.Color(255, 153, 0));
        btnEliminarCli.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnEliminarCli.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarCli.setText("ELIMINAR");
        btnEliminarCli.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCliActionPerformed(evt);
            }
        });
        jPanel8.add(btnEliminarCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 100, 30));

        btnActualizarCli.setBackground(new java.awt.Color(255, 153, 0));
        btnActualizarCli.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnActualizarCli.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarCli.setText("ACTUALIZAR");
        btnActualizarCli.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCliActionPerformed(evt);
            }
        });
        jPanel8.add(btnActualizarCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 100, 30));

        cmbEstadoCli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "I" }));
        cmbEstadoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoCliActionPerformed(evt);
            }
        });
        jPanel8.add(cmbEstadoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, -1, -1));

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 720, 230));

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblListadoCat2.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblListadoCat2.setText("Listado de Clientes");
        jPanel9.add(lblListadoCat2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 200, -1));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id del Cliente", "Cedula", "Nombre/s", "Apellido/s", "Dirección", "Teléfono", "Correo", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tablaClientes);

        jPanel9.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 680, 140));

        jPanel7.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 720, 210));

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exitTxt.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        exitTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitTxt.setText("<");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel7.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCliActionPerformed
        // Valores
        String cedula    = txtCedulaCli.getText().trim();
        String nombre    = txtNombreCli.getText().trim();
        String apellido  = txtApellidoCli.getText().trim();
        String direccion = txtDireccionCli.getText().trim();
        String telefono  = txtTelefonoCli.getText().trim();
        String correo    = txtCorreoCli.getText().trim();
        String estado    = cmbEstadoCli.getSelectedItem().toString();

        // Validación campos vacíos
        if(cedula.isEmpty()||nombre.isEmpty()||apellido.isEmpty()||
        direccion.isEmpty()||telefono.isEmpty()||correo.isEmpty()) 
        {
            JOptionPane.showMessageDialog(this, "Campos Incompletos");
            return;
        }

        // Secuencia SQL
        String sql = "INSERT INTO MUE_CLIENTES (cli_id,cli_cedula,cli_nombre,cli_apellido,cli_direccion,cli_telefono,cli_correo,cli_estado) "
                   + "VALUES (cli_id_seq.NEXTVAL,?,?,?,?,?,?,?)";
        try (Connection cn = BD.conectar();
             PreparedStatement ps = cn.prepareStatement(sql)) {

            ps.setString(1, cedula);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, direccion);
            ps.setString(5, telefono);
            ps.setString(6, correo);
            ps.setString(7, estado);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Cliente agregado correctamente");

            txtCedulaCli.setText("");
            txtNombreCli.setText("");
            txtApellidoCli.setText("");
            txtDireccionCli.setText("");
            txtTelefonoCli.setText("");
            txtCorreoCli.setText("");
            cmbEstadoCli.setSelectedIndex(0);
            cargarClientes();
            
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error al agregar cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarCliActionPerformed

    private void btnEliminarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCliActionPerformed
        int fila = tablaClientes.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente para eliminar");
            return;
        }
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        int cliId = (int) modelo.getValueAt(fila, 0);

        String sqlCount = "SELECT COUNT(*) AS cnt FROM MUE_FACTURAS WHERE cli_id = ?";
        try (Connection cn = BD.conectar();
            PreparedStatement psCount = cn.prepareStatement(sqlCount)) 
        {   
            psCount.setInt(1, cliId);
            ResultSet rs = psCount.executeQuery();
            rs.next();
            int cnt = rs.getInt("cnt");

            if (cnt > 0) 
            {
                JOptionPane.showMessageDialog(this,
                    "Este cliente tiene " + cnt + " factura(s) asociada(s).\n" +
                    "Primero debe cambiar su estado a 'I' y luego eliminar sus facturas.",
                    "No se puede eliminar",
                    JOptionPane.WARNING_MESSAGE
                );
                return;
            }
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error al verificar facturas: " + e.getMessage());
            return;
        }

        int opt = JOptionPane.showConfirmDialog(this,
            "¿Seguro que desea eliminar este cliente?", 
            "Eliminar Cliente", JOptionPane.YES_NO_OPTION);
        if (opt != JOptionPane.YES_OPTION) return;

        String sqlDel = "DELETE FROM MUE_CLIENTES WHERE cli_id = ?";
        try (Connection cn = BD.conectar();
            PreparedStatement psDel = cn.prepareStatement(sqlDel)) 
        {
            psDel.setInt(1, cliId);
            psDel.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");
            
            txtCedulaCli.setText("");
            txtNombreCli.setText("");
            txtApellidoCli.setText("");
            txtDireccionCli.setText("");
            txtTelefonoCli.setText("");
            txtCorreoCli.setText("");
            cmbEstadoCli.setSelectedIndex(0);
            
            cargarClientes();
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error al eliminar cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarCliActionPerformed

    private void btnActualizarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCliActionPerformed
        
        int fila = tablaClientes.getSelectedRow();
        if (fila < 0)
        {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente para actualizar.");
            return;
        }

        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        int cliId = (int) modelo.getValueAt(fila, 0);

        String cedula    = txtCedulaCli.getText().trim();
        String nombre    = txtNombreCli.getText().trim();
        String apellido  = txtApellidoCli.getText().trim();
        String direccion = txtDireccionCli.getText().trim();
        String telefono  = txtTelefonoCli.getText().trim();
        String correo    = txtCorreoCli.getText().trim();
        String estado    = cmbEstadoCli.getSelectedItem().toString();

        if(cedula.isEmpty()||nombre.isEmpty()||apellido.isEmpty()||
           direccion.isEmpty()||telefono.isEmpty()||correo.isEmpty()) 
        {
            JOptionPane.showMessageDialog(this, "Campos Incompletos");
            return;
        }

        // Ejecutar UPDATE
        String sql = "UPDATE MUE_CLIENTES SET "
                   + "cli_cedula=?, cli_nombre=?, cli_apellido=?, cli_direccion=?, "
                   + "cli_telefono=?, cli_correo=?, cli_estado=? "
                   + "WHERE cli_id=?";
        try (Connection cn = BD.conectar();
             PreparedStatement ps = cn.prepareStatement(sql)) {

            ps.setString(1, cedula);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, direccion);
            ps.setString(5, telefono);
            ps.setString(6, correo);
            ps.setString(7, estado);
            ps.setInt   (8, cliId);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Cliente actualizado correctamente");
            
            txtCedulaCli.setText("");
            txtNombreCli.setText("");
            txtApellidoCli.setText("");
            txtDireccionCli.setText("");
            txtTelefonoCli.setText("");
            txtCorreoCli.setText("");
            cmbEstadoCli.setSelectedIndex(0);
            
            cargarClientes();
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarCliActionPerformed

    private void cmbEstadoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEstadoCliActionPerformed

    private void txtCorreoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoCliActionPerformed

    private void txtTelefonoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoCliActionPerformed

    private void txtCedulaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaCliActionPerformed

    private void txtNombreCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCliActionPerformed

    private void txtApellidoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCliActionPerformed

    private void txtDireccionCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionCliActionPerformed

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        Dashboard dashboard = new Dashboard("A"); // o el permiso real que corresponda
        dashboard.setLocationRelativeTo(null);
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseEntered
        exitBtn.setBackground(Color.red);
        exitTxt.setForeground(Color.white);
    }//GEN-LAST:event_exitTxtMouseEntered

    private void exitTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseExited
        exitBtn.setBackground(Color.white);
        exitTxt.setForeground(Color.black);
    }//GEN-LAST:event_exitTxtMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarCli;
    private javax.swing.JButton btnAgregarCli;
    private javax.swing.JButton btnEliminarCli;
    private javax.swing.JComboBox<String> cmbEstadoCli;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JLabel exitTxt;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblApellidoCli;
    private javax.swing.JLabel lblApellidoCli1;
    private javax.swing.JLabel lblApellidoCli2;
    private javax.swing.JLabel lblApellidoCli3;
    private javax.swing.JLabel lblApellidoCli4;
    private javax.swing.JLabel lblApellidoCli5;
    private javax.swing.JLabel lblCrearProd5;
    private javax.swing.JLabel lblListadoCat2;
    private javax.swing.JLabel lblMateriales;
    private javax.swing.JLabel lblNombreCat3;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtApellidoCli;
    private javax.swing.JTextField txtCedulaCli;
    private javax.swing.JTextField txtCorreoCli;
    private javax.swing.JTextField txtDireccionCli;
    private javax.swing.JTextField txtNombreCli;
    private javax.swing.JTextField txtTelefonoCli;
    // End of variables declaration//GEN-END:variables
}
